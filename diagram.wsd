@startuml Adventure

class Room{
    + NAME : String
    + DESCRIPTION : String
    - exits : Map<String, Exit>
    - npcs : List<NPC>
    - chests : List<Chest>
    - items : List<Item>

    + Room(String, String) 
}

class Map{
    + {static}MAP : Map
    - curr : int
    - rooms : List<Room>

    - Map()
    + init() : void
}

class Exit{
    + ROOMS : List<Room>
    
    + Exit(Room)
}

abstract class Item{
    + VOLUME : int
    + NAME : String

    + Item(int, String)
    + {abstract}use() : void
}

class Backpack{
    + VOLUME : int
    - items : List<Item>

    + Backpack()
    + remove(Item) : void
}

class Hero{
    - hp : int
    - gold : int
    - keys : List<Key>
    - equipment : Equipment[]
    + BACKPACK : List<Item>

    + Hero()
    + use(String) : void
    + take(Item) : void
    + drop(Item) : void
    + attack(NPC) : void
}

abstract class NPC{
    + HP : int
    + DMG : int
    + DESCRIPTION : String
    - key : Key

    + NPC()
    + NPC(int)
    + NPC(Key) 
    + {abstract} attack() : void
}

Hero *--> Backpack
Backpack --|> Item
Key --|> Item
Room *--> Exit
Room *--> NPC
Map *--> Room

@enduml